openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/customerpayme/ZuriChat/1.0.0
  - description: Zuri Chat Core API
    url: 'https://api.zuri-app-url.com/v1'
info:
  version: 1.0.0
  title: Zuri Chat Core API
  description: Zuri Chat is an open source slack clone. However, it offers a lot more functionality via a plugin system where each room can be provided by a different plugin provider.
  contact:
    email: developer@zuri.chat
tags:
  - name: app
    description: Api for the Apps
  - name: Users
    description: Endpoints for managing users

paths:
  /sidebar:
    get:
      tags:
        - app
      summary: retrieves all sidebar items that should be displayed on behalf of this app
      operationId: getSidebar
      description: |
        This will return everything that needs to be shown in the sidebar
      parameters:
        - in: query
          name: userID
          description: provide the userid of the authenticated person. 
          required: true
          schema:
            type: string
        - in: query
          name: userToken
          description: provide a user token that this app will use to validate that the call is genuine. It will call back Zuri Core
          schema:
            type: string
      responses:
        '200':
          description: a list of sidebar items to be displayed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SidebarItem'
        '400':
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /show:
    post:
      tags:
        - app
      summary: displays the main body of the app
      operationId: showApp
      description: |
        Queries to get the full html for the app that will be shown on the right
        hand side
      parameters:
        - in: query
          name: userID
          description: The ID of the particular user viewing this app
          required: true
          schema:
            type: string
        - in: query
          name: userToken
          description: an authentication token
          schema:
            type: string
            
      requestBody:
        description: The structure for the entire request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppRequest'
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/App'
        '400':
          description: bad input parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /users/{user_id}:
    put:
      summary: Updates the details of a user
      security:
        - bearerAuth: [] 
      parameters:
        - $ref: '#/components/parameters/user_id'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'

      tags:
        - Users

      responses:
        '200':
          description: User was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

        '404':
          description: No user with the specified user_id was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

        '500':
          description: Someting went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: Retrieves the information about a user
      security:
        - bearerAuth: [] 
      parameters:
        - $ref: '#/components/parameters/user_id'

      responses:
        '200':
          description: Returns the full info about a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

        '404':
          description: No user with the specified user_id was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

      tags:
        - Users

    delete:
      summary: Deactivates a user's account
      security:
        - bearerAuth: [] 
      parameters:
        - $ref: '#/components/parameters/user_id'

      tags:
        - Users

      responses:
        '204':
          description: User was successfully deactivated

        '404':
          description: No user with the specified user_id was found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

        '500':
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{user_id}/verify:
    get:
      summary: Sends an email verification link to a user
      security:
        - bearerAuth: [] 
      parameters:
        - $ref: '#/components/parameters/user_id'

      responses:
        '204':
          description: Email verification code successfully sent

        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

        '403':
          description: Forbidden, the requesting user's _id doesn't match the provided user_id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

      tags:
        - Users

    patch:
      summary: Verifies a user's email address and updates their verification status
      description: Code should be the otp in the email verification link recieved by the user
      security:
        - bearerAuth: [] 
      parameters:
        - $ref: '#/components/parameters/user_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'

      responses:
        '200':
          description: The user's email has been verified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

        '400':
          description: Invalid email verification code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

      tags:
        - Users

components:
  parameters:
    user_id:
      in: path
      name: user_id
      required: true
      schema:
        type: string

  schemas:
    SidebarItem:
      type: object
      required:
        - id
        - title
        - icon
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        title:
          type: string
          example: DM
        icon:
          type: string
          example: user-profile-image 
        parent_id:
          type: string 
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          
    AppRequest:
      properties:
        users_in_room:
          type: string
          example: Private Messages
        data_endpoint:
          type: string
          example: 'api.zuri.chat/data'
        messaging_endpoint:
          type: string
          example: 'api.zuri.chat/messaging'
      type: object
      
    App:
      required:
        - name
      properties:
        title:
          type: string
          example: Private Messages
        fullhtml:
          type: string
          example: '<html><head>...'
        version:
          type: string
          example: 1.01
      type: object

    User:
      type: object
      properties:
         first_name:
           type: string
         last_name:
           type: string
         phone_number:
           type: number
         password:
           type: string
         email:
           type: string
         email_verified:
           type: boolean

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

    VerifyEmail:
      type: object
      properties:
        code:
          type: string
